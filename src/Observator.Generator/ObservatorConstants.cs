namespace Observator.Generator
{
    public static class ObservatorConstants
    {
        public const string ObservatorTraceAttributeFullName = "Observator.Generated.ObservatorTraceAttribute";
        public const string ObservatorTraceAttributeName = "ObservatorTraceAttribute";
        public const string ObservatorTraceShortName = "ObservatorTrace";

        public const string LoggerFieldName1 = "_logger";
        public const string LoggerFieldName2 = "logger";
        public const string LoggerFieldName3 = "_log";
        public const string LoggerFieldName4 = "log";

        public const string LoggerTypeName = "ILogger";
        public const string LoggerTypePrefix = "Microsoft.Extensions.Logging.ILogger";

        public const string TaskReturnType = "Task";
        public const string ValueTaskReturnType = "ValueTask";

        public const string AutoGeneratedComment = "// <auto-generated />";
        public const string LoggingUsingDirective = "using Microsoft.Extensions.Logging;";

        public const string InterceptorClassName = "file static class Interceptor";
        public const string CompilerServicesNamespace = "namespace System.Runtime.CompilerServices";
        public const string InterceptsLocationAttributeName = "InterceptsLocationAttribute";

        public const string ActivityNameFormat = "Intercepted.{source.GetType().Name}.{methodName}";
        public const string ActivitySetStatusError = "activity?.SetStatus(System.Diagnostics.ActivityStatusCode.Error, exception.Message);";
        public const string ActivitySetStatusOk = "activity?.SetStatus(activity.Status == System.Diagnostics.ActivityStatusCode.Unset ? System.Diagnostics.ActivityStatusCode.Ok : activity.Status, activity.StatusDescription)?.Dispose();";
    }
}